{"remainingRequest":"D:\\Git Projects\\OldMachineApp\\DefaultPortal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Git Projects\\OldMachineApp\\DefaultPortal\\node_modules\\ngx-bootstrap\\tabs\\ng-transclude.directive.js","dependencies":[{"path":"D:\\Git Projects\\OldMachineApp\\DefaultPortal\\node_modules\\ngx-bootstrap\\tabs\\ng-transclude.directive.js","mtime":499162500000},{"path":"D:\\Git Projects\\OldMachineApp\\DefaultPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600064310000},{"path":"D:\\Git Projects\\OldMachineApp\\DefaultPortal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { Directive, Input, ViewContainerRef } from '@angular/core';\nvar NgTranscludeDirective = /** @class */ /*@__PURE__*/ (function () {\n    function NgTranscludeDirective(viewRef) {\n        this.viewRef = viewRef;\n    }\n    Object.defineProperty(NgTranscludeDirective.prototype, \"ngTransclude\", {\n        get: function () {\n            return this._ngTransclude;\n        },\n        set: function (templateRef) {\n            this._ngTransclude = templateRef;\n            if (templateRef) {\n                this.viewRef.createEmbeddedView(templateRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NgTranscludeDirective;\n}());\nexport { NgTranscludeDirective };\n//# sourceMappingURL=ng-transclude.directive.js.map\n",null]}